<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Emailgroup extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Emails_model');
    } 

    /*
     * Listing of emailgroups
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('emailgroup/index?');
        $data['emailgroups'] = $this->Emails_model->getRows('emailgroups');
        
        $data['_view'] = 'emailgroup/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new emailgroup
     */
    function add()
    {   
        $data['email_list'] = $this->Emails_model->getRows('customers');
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(                
                'groupname' => $this->input->post('groupname'),
                'groupcount' =>count( $this->input->post('email')),               
                
            );
            $name = $this->input->post('name');
            $email=$this->input->post('email');
            $emailgroup_id = $this->Emails_model->insert('emailgroups',$params);

            

            $i=0;
            for($i;$i<count($email);$i++){
                 $paramsx = array(                
                'groupid' => $emailgroup_id['ID'],
                'name' =>$name[$i],
                'email' =>$email[$i]                
            );

               $grdetails=  $this->Emails_model->insert('grdetails',$paramsx);
            }
            

            redirect('emailgroup/index');
        }
        else
        {            
            $data['_view'] = 'emailgroup/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a emailgroup
     */
    function edit($id)
    {   
        // check if the emailgroup exists before trying to edit it
        $data['emailgroup'] = $this->Emails_model->getRows('emailgroups', array('where'=> array('groupid'=>$id)));
        $data['grdetails']= $this->Emails_model->getRows('grdetails', array('where'=> array('groupid'=>$id)));
        $data['groupid']=$id;
        if(isset($data['emailgroup']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(                
                'groupname' => $this->input->post('groupname'),
                'groupcount' =>count( $this->input->post('email')),               
                
            );
            $name = $this->input->post('name');
            $email=$this->input->post('email');
            $groupid=$this->input->post('groupid');
            $emailgroups=$this->Emails_model->update('emailgroups',$params, array('groupid'=>$groupid));

            $this->Emails_model->delete2("grdetails","groupid",$groupid );

            $i=0;
            for($i;$i<count($email);$i++){
                 $paramsx = array(                
                'groupid' => $groupid,
                'name' =>$name[$i],
                'email' =>$email[$i]                
            );

               $grdetails=  $this->Emails_model->insert('grdetails',$paramsx);
            }   
                redirect('emailgroup/index');
            }
            else
            {
                $data['_view'] = 'emailgroup/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The emailgroup you are trying to edit does not exist.');
    } 

    /*
     * Deleting emailgroup
     */
    function remove($id)
    {

        // check if the emailgroup exists before trying to delete it
        if(isset($id))
        {
            $this->Emails_model->delete2('emailgroups','groupid',$id);
            redirect('emailgroup/index');
        }
        else
            show_error('The emailgroup you are trying to delete does not exist.');
    }
    
    function loadData(){
        $tblname= $this->input->post('tblname');
        if(!$tblname) {
            ?>
            
            <?php
            die();
        }
        
        $result= $this->Emails_model->getRows($tblname);
         
        if($tblname=='company'){
         foreach ($result as $r){
         ?>
         
             <tr>
                <td><input type="checkbox" name="list_ids[]" value="1"/></td>
                 <td class="name"><?php echo $r['Name']?></td>
                <td class="email"><?php echo $r['email']?></td>
               
            </tr>

        <?php
         }
        }elseif($tblname=='employees'){
         foreach ($result as $r){
         ?>
         
             <tr>
                 <td><input type="checkbox" name="list_ids[]" value="1"/></td>
                <td class="name"><?php echo $r['emp_name']?></td>
                <td class="email"><?php echo $r['email']?></td>
                
            </tr>

        <?php
         }
        }elseif($tblname=='customers'){
         foreach ($result as $r){
         ?>
         
             <tr>
                <td><input type="checkbox" name="list_ids[]" value="1"/></td>
                <td class="name"><?php echo $r['Customer_name']?></td>
                <td class="email"><?php echo $r['email']?></td>
               
            </tr>

        <?php
         }
        }
         die();
    }
    
}
