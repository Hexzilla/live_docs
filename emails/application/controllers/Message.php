<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Message extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Emails_model');
     $config['upload_path'] = FCPATH.'assets/upload/';
    $config['allowed_types'] = 'gif|jpg|png|pdf|doc|docx';
    $config['max_size'] = 2048;
    $config['max_width'] = 3024;
    $config['max_height'] = 3024;
    $config['file_ext_tolower'] = TRUE;

    $this->load->library('upload', $config);
    } 

    /*
     * Listing of letters
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('message/index?');
     
        $data['message']=$this->Emails_model->getRows('message');
        $this->pagination->initialize($config);


        
        $data['_view'] = 'message/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new letter
     */
    function add()
    {

        $data['emailgroups'] = $this->Emails_model->getRows('emailgroups');
        $this->load->library('form_validation');


        $this->form_validation->set_rules('subject', 'Subject', 'required');

        
        
    
    
    
    
        
        
        if ($this->form_validation->run()) {
            
            $attach='';
        
       
        if($_FILES['attachments']['name']){ 
            $attach=$_FILES['attachments']['name'];
            if ( ! $this->upload->do_upload('attachments')){
                $this->data['error'] = $this->upload->display_errors();
            }else{
              if($this->upload->do_upload('attachments')){
                $upload_data  = $this->upload->data();
                $attachments=$upload_data['file_name'];
                 $attach=$attachments;
              }
            }
        }
        

        
        if($_FILES['attachments2']['name']){ 
            if ( ! $this->upload->do_upload('attachments2')){
                $this->data['error'] = $this->upload->display_errors();
            }else{
              if($this->upload->do_upload('attachments2')){
                $upload_data  = $this->upload->data();
                $attachments2=$upload_data['file_name'];
                $attach=$attach.','.$attachments2;
              }
            }
        }
    
    
   
        
        if($_FILES['attachments3']['name']){ 
            if ( ! $this->upload->do_upload('attachments3')){
                $this->data['error'] = $this->upload->display_errors();
            }else{
              if($this->upload->do_upload('attachments3')){
                $upload_data  = $this->upload->data();
                $attachments3=$upload_data['file_name'];
                $attach=$attach.','.$attachments3;
              }
            }
        }
            
            
            $params = array(
                'send_date_time' => $this->input->post('send_date_time'),
                'content' => addslashes($this->input->post('content')),                
                'subject' => $this->input->post('subject'),
            );
            if($this->input->post('toemail')){ $params['toemail']=$this->input->post('toemail');}else{$params['toemail']='';}
            if($this->input->post('mailcc')) $params['mailcc']=$this->input->post('mailcc');
            if($this->input->post('group_ids'))  $params['mailto'] = implode(',', $this->input->post('group_ids'));
            if($attach) $params['attachments']=$attach;
            $letter_id = $this->Emails_model->insert('message', $params);
            
            
//            print_r($this->data['error']);
//            print_r($params);
            redirect('message/index');
        } else {
            $data['_view'] = 'message/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a letter
     */
    function edit($id)
    {   
        // check if the letter exists before trying to edit it
        
        $data['emailgroups'] = $this->Emails_model->getRows('emailgroups');
        $data['id']=$id;
        $data['message']=$this->Emails_model->getRows('message', array('where'=>array('id'=>$id)));

      
        
        if(isset($id))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('subject','Subject','required');
		
            if ($this->form_validation->run()) {
            $params = array(
                'send_date_time' => $this->input->post('send_date_time'),
                'content' => addslashes($this->input->post('content')),
                'subject' => $this->input->post('subject')
            );

            if($this->input->post('mailcc')) $params['mailcc']=$this->input->post('mailcc');
            if($this->input->post('toemail')){ $params['toemail']=$this->input->post('toemail');}else{$params['toemail']='';}
            if($this->input->post('group_ids')) { $params['mailto'] = implode(',', $this->input->post('group_ids'));}else{$params['mailto']='';}
            $letter_id = $this->Emails_model->update('message', $params, array('id'=>$id));
           

            redirect('message/index');
            }
            else
            {
                $data['_view'] = 'message/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The letter you are trying to edit does not exist.');
    } 

    /*
     * Deleting letter
     */
    function remove($id)
    {
        

        // check if the letter exists before trying to delete it
        if(isset($id))
        {
            $this->Emails_model->delete('message',$id);
            redirect('message/index');
        }
        else
            show_error('The letter you are trying to delete does not exist.');
    }
    
}
