<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Company extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Company_model');
    } 

    /*
     * Listing of company
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('company/index?');
        $config['total_rows'] = $this->Company_model->get_all_company_count();
        $this->pagination->initialize($config);

        $data['company'] = $this->Company_model->get_all_company($params);
        
        $data['_view'] = 'company/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new company
     */
    function add()
    {   
        if(!$this->auth->isAdd()){
            redirect('/');
        }
        $this->load->library('form_validation');

		$this->form_validation->set_rules('email','Email','valid_emails');
		$this->form_validation->set_rules('Name','Name','required');
		$this->form_validation->set_rules('CompType','CompType','required');
		$this->form_validation->set_rules('Customer_id','Customer Id','required');
         $data=array();
		$data['err_customer_id']="";		
		
		$Customer_id=$this->input->post('Customer_id');
		
		if((empty($Customer_id))&&($_POST)){
			
			$data['err_customer_id']="There is no customers defined, please add customer first";
		}			
	
		
		
		
		
		if($this->form_validation->run())     
        {   
	
	     $files = $this->db->get_where('customers', array('Customer_name' =>$Customer_id))->row_array();
	     if(!empty($files)){ 
	
	
					$params = array(
						'Remarks' => $this->input->post('Remarks'),
						'CompType' => $this->input->post('CompType'),
						'Customer_id' => $files['customer_id'],
						'Managerid' => $this->input->post('Managerid'),
						'Name' => $this->input->post('Name'),
						'companyNo' => $this->input->post('companyNo'),
						'CompReg' => $this->input->post('CompReg'),
						'email' => $this->input->post('email'),
					);
					
					$company_id = $this->Company_model->add_company($params);
		 }
            redirect('company/index');
        }
        else
        {
			$this->load->model('Comptype_model');
			$data['all_comptypes'] = $this->Comptype_model->get_all_comptypes();

			$this->load->model('Customer_model');
			$data['all_customers'] = $this->Customer_model->get_all_customers();

			$this->load->model('Employee_model');
			$data['all_employees'] = $this->Employee_model->get_all_managers();
            
            $data['_view'] = 'company/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a company
     */
    function edit($companyid)
    {   
        if(!$this->auth->isEdit()){
            redirect('/');
        }
        // check if the company exists before trying to edit it
		 $data=array();
          $data['company'] = $this->Company_model->get_company($companyid);
	/* 	echo"<pre>";
		print_r($data['company']);
		exit(); */
	
       
		$data['err_customer_id']="";		
		
		$Customer_id=$this->input->post('Customer_id');
		
		if((empty($Customer_id))&&($_POST)){
			
			$data['err_customer_id']="There is no customers defined, please add customer first";
		}			
		
		
		
		
        
        if(isset($data['company']['companyid']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('email','Email','valid_emails');
			$this->form_validation->set_rules('Name','Name','required');
			$this->form_validation->set_rules('CompType','CompType','required');
			$this->form_validation->set_rules('Customer_id','Customer Id','required');
		
			if($this->form_validation->run())     
            {   
				 $files = $this->db->get_where('customers', array('Customer_name' =>$Customer_id))->row_array();
				 if(!empty($files)){ 
						
						$params = array(
							'Remarks' => $this->input->post('Remarks'),
							'CompType' => $this->input->post('CompType'),
							'Customer_id' => $files['customer_id'],
							'Managerid' => $this->input->post('Managerid'),
							'Name' => $this->input->post('Name'),
							'companyNo' => $this->input->post('companyNo'),
							'CompReg' => $this->input->post('CompReg'),
							'email' => $this->input->post('email'),
						);

						$this->Company_model->update_company($companyid,$params);     
				 }				
                redirect('company/index');
            }
            else
            {
				$this->load->model('Comptype_model');
				$data['all_comptypes'] = $this->Comptype_model->get_all_comptypes();

				$this->load->model('Customer_model');
				$data['all_customers'] = $this->Customer_model->get_all_customers();

				$this->load->model('Employee_model');
				$data['all_employees'] = $this->Employee_model->get_all_managers();

                $data['_view'] = 'company/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The company you are trying to edit does not exist.');
    } 

    /*
     * Deleting company
     */
    function remove($companyid)
    {
        if(!$this->auth->isDelete()){
            redirect('/');
        }
        $company = $this->Company_model->get_company($companyid);

        // check if the company exists before trying to delete it
        if(isset($company['companyid']))
        {
            $this->Company_model->delete_company($companyid);
            redirect('company/index');
        }
        else
            show_error('The company you are trying to delete does not exist.');
    }
    
}
