<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Employee_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Find company by name
     */
    function find_employee($name)
    {
		$this->db->select('employee_id as id');
		$this->db->from('employees AS C');		
		$this->db->where('emp_name', $name);
		$query = $this->db->get();
		return $data = $query->result();
    }

    function is_duplicated_name($name, $editId)
    {
        if (empty($name)) {
            return false;
        }

        $items = $this->find_employee($name);
		if (count($items) <= 0) {
			return false;
		}

		if (empty($editId)) {
            return true;
        }

        if (count($items) > 1) {
            return true;
        }

        $item = $items[0];
        if ($item->id != $editId) {
            return true;
        }
        return false;
    }
    
    /*
     * Get employee by employee_id
     */
    function get_employee($employee_id)
    {
		$this->db->select('D.status,D.employee_id,D.companyid,D.emp_name,D.email,D.mobile,D.Nationality,D.position,D.Ctype,D.Remarks,CC.Name ');
		$this->db->from('employees AS D');
		$this->db->join('company AS CC','D.companyid=CC.companyid');
		$this->db->where('employee_id',$employee_id);
		$query=$this->db->get();
		return $data=$query->row_array();
    }
    
    /*
     * Get all employees count
     */
    function get_all_employees_count()
    {
        $this->db->from('employees');
        return $this->db->count_all_results();
    }
        
    /*
     * Get all employees
     */
    function get_all_employees($params = array())
    {
        $this->db->order_by('emp_name', 'asc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
      //  return $this->db->get('employees')->result_array();
	      $this->db->select('employees.status,employees.employee_id,employees.companyid,employees.emp_name ,employees.email,employees.mobile,employees.Nationality,employees.position,employees.Ctype,employees.Remarks,company.Name as companyname, emptypes.ctname as empposition ');
		
        $this->db->from('employees');
        //$this->db->join('customers', 'company.customer_id = customers.customer_id');
        $this->db->join('emptypes','employees.Ctype= emptypes.Ctype','left');
        $this->db->join('company','employees.companyid=company.companyid','left');
      //  $this->db->join('comptypes','company.CompType=comptypes.CompType','inner');
         return $this->db->get()->result_array();
		
		
		
		
		
    }
    
	
	
	  function get_all_managers($params = array())
    {
        $this->db->order_by('employee_id', 'desc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
      //  return $this->db->get('employees')->result_array();
	      $this->db->select('employees.employee_id,employees.companyid,employees.emp_name ,employees.email,employees.mobile,employees.Nationality,employees.position,employees.Ctype,employees.Remarks,company.Name as companyname, emptypes.ctname as empposition ');
		
        $this->db->from('employees');
        //$this->db->join('customers', 'company.customer_id = customers.customer_id');
        $this->db->join('emptypes','employees.Ctype= emptypes.Ctype','inner');
        $this->db->join('company','employees.companyid=company.companyid','inner');
      //  $this->db->join('comptypes','company.CompType=comptypes.CompType','inner');
	      $where = "employees.Ctype='1'";
          $this->db->where($where);
          return $this->db->get()->result_array();
		
		
		
		
		
    }
	
    function get_employees_by_company_ids($company_ids = []){
        if(!$company_ids){
            return [];
        }
        $this->db->from('employees');
        $this->db->where_in('companyid', $company_ids);
        return $this->db->get()->result_array();
		
		
		
    }
        
		
	 function get_managers_by_company_ids($company_ids = []){
        if(!$company_ids){
            return [];
        }
        $this->db->from('employees');
        $this->db->where_in('companyid', $company_ids);
        return $this->db->get()->result_array();
		
		
		
    }	
		
    /*
     * function to add new employee
     */
    function add_employee($params)
    {
        $this->db->insert('employees',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update employee
     */
    function update_employee($employee_id,$params)
    {
        $this->db->where('employee_id',$employee_id);
        return $this->db->update('employees',$params);
    }
    
    /*
     * function to delete employee
     */
    function delete_employee($employee_id)
    {
        return $this->db->delete('employees',array('employee_id'=>$employee_id));
    }
}
