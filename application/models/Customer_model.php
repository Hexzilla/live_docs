<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Customer_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Find company by name
     */
    function find_customer($name)
    {
		$this->db->select('customer_id as id');
		$this->db->from('customers AS C');		
		$this->db->where('Customer_name', $name);
		$query = $this->db->get();
		return $data = $query->result();
    }

    function is_duplicated_name($name, $editId)
    {
        if (empty($name)) {
            return false;
        }

        $items = $this->find_customer($name);
		if (count($items) <= 0) {
			return false;
		}

		if (empty($editId)) {
            return true;
        }

        if (count($items) > 1) {
            return true;
        }

        $item = $items[0];
        if ($item->id != $editId) {
            return true;
        }
        return false;
    }

    /*
     * Get customer by customer_id
     */
    function get_customer($customer_id)
    {
        return $this->db->get_where('customers',array('customer_id'=>$customer_id))->row_array();
    }
    
    /*
     * Get all customers count
     */
    function get_all_customers_count($value=null)
    {
      		
		$this->db->from('customers');
		if(!empty($value)){
			$this->db->like('Customer_name',$value);
		}
        return $this->db->count_all_results();
    }
        
    /*
     * Get all customers
     */
    function get_all_customers($params = array())
    {
        $this->db->order_by('Customer_name', 'asc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get('customers')->result_array();
    }
        
    /*
     * function to add new customer
     */
    function add_customer($params)
    {
        $this->db->insert('customers',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update customer
     */
    function update_customer($customer_id,$params)
    {
        $this->db->where('customer_id',$customer_id);
        return $this->db->update('customers',$params);
    }
    
    /*
     * function to delete customer
     */
    function delete_customer($customer_id)
    {
        return $this->db->delete('customers',array('customer_id'=>$customer_id));
    }
	
	
	 public function count_customer_by_company_id($companyid){
        $this->db->from('customers');
        $this->db->where('companyid', $companyid);
        return $this->db->count_all_results();
    }
}
